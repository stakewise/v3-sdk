/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  PrivateVaultDiffAbi,
  PrivateVaultDiffAbiInterface,
} from "../PrivateVaultDiffAbi";

const _abi = [
  {
    inputs: [],
    name: "whitelister",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_whitelister",
        type: "address",
      },
    ],
    name: "setWhitelister",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "updateWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class PrivateVaultDiffAbi__factory {
  static readonly abi = _abi;
  static createInterface(): PrivateVaultDiffAbiInterface {
    return new Interface(_abi) as PrivateVaultDiffAbiInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PrivateVaultDiffAbi {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as PrivateVaultDiffAbi;
  }
}
