[
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "keeper",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "osTokenConfigV1",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "osTokenConfigV2",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "osTokenController",
        "type": "address"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "inputs": [],
    "name": "MathOverflowedMulDiv",
    "type": "error"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "address",
            "name": "vault",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "user",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "stakeAssets",
            "type": "uint256"
          },
          {
            "components": [
              {
                "internalType": "bytes32",
                "name": "rewardsRoot",
                "type": "bytes32"
              },
              {
                "internalType": "int160",
                "name": "reward",
                "type": "int160"
              },
              {
                "internalType": "uint160",
                "name": "unlockedMevReward",
                "type": "uint160"
              },
              {
                "internalType": "bytes32[]",
                "name": "proof",
                "type": "bytes32[]"
              }
            ],
            "internalType": "struct IKeeperRewards.HarvestParams",
            "name": "harvestParams",
            "type": "tuple"
          }
        ],
        "internalType": "struct StakeHelpers.StakeInput",
        "name": "inputData",
        "type": "tuple"
      }
    ],
    "name": "calculateStake",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "receivedOsTokenShares",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "exchangeRate",
            "type": "uint256"
          }
        ],
        "internalType": "struct StakeHelpers.StakeOutput",
        "name": "outputData",
        "type": "tuple"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "address",
            "name": "vault",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "user",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "osTokenShares",
            "type": "uint256"
          },
          {
            "components": [
              {
                "internalType": "bytes32",
                "name": "rewardsRoot",
                "type": "bytes32"
              },
              {
                "internalType": "int160",
                "name": "reward",
                "type": "int160"
              },
              {
                "internalType": "uint160",
                "name": "unlockedMevReward",
                "type": "uint160"
              },
              {
                "internalType": "bytes32[]",
                "name": "proof",
                "type": "bytes32[]"
              }
            ],
            "internalType": "struct IKeeperRewards.HarvestParams",
            "name": "harvestParams",
            "type": "tuple"
          }
        ],
        "internalType": "struct StakeHelpers.UnstakeInput",
        "name": "inputData",
        "type": "tuple"
      }
    ],
    "name": "calculateUnstake",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "burnOsTokenShares",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "exitQueueShares",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "receivedAssets",
            "type": "uint256"
          }
        ],
        "internalType": "struct StakeHelpers.UnstakeOutput",
        "name": "outputData",
        "type": "tuple"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "address",
            "name": "vault",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "user",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "osTokenShares",
            "type": "uint256"
          },
          {
            "components": [
              {
                "internalType": "bytes32",
                "name": "rewardsRoot",
                "type": "bytes32"
              },
              {
                "internalType": "int160",
                "name": "reward",
                "type": "int160"
              },
              {
                "internalType": "uint160",
                "name": "unlockedMevReward",
                "type": "uint160"
              },
              {
                "internalType": "bytes32[]",
                "name": "proof",
                "type": "bytes32[]"
              }
            ],
            "internalType": "struct IKeeperRewards.HarvestParams",
            "name": "harvestParams",
            "type": "tuple"
          }
        ],
        "internalType": "struct StakeHelpers.BalanceInput",
        "name": "inputData",
        "type": "tuple"
      }
    ],
    "name": "getBalance",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "receivedAssets",
        "type": "uint256"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes[]",
        "name": "data",
        "type": "bytes[]"
      }
    ],
    "name": "multicall",
    "outputs": [
      {
        "internalType": "bytes[]",
        "name": "results",
        "type": "bytes[]"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  }
]
